$date
	Fri Nov 29 09:15:14 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 8 ! reg_out [7:0] $end
$var wire 4 " SREG [3:0] $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$var reg 4 % function_select_lines [3:0] $end
$scope module uut $end
$var wire 4 & function_select_lines [3:0] $end
$var wire 8 ' operandA [7:0] $end
$var wire 8 ( operandB [7:0] $end
$var reg 4 ) SREG [3:0] $end
$var reg 8 * reg_out [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1
b0 "
b0 )
b1111 !
b1111 *
b1 %
b1 &
b1001 $
b1001 (
b110 #
b110 '
#6
b110 "
b110 )
b11111101 !
b11111101 *
b10 %
b10 &
b110 $
b110 (
b11 #
b11 '
#11
b11010001 !
b11010001 *
b110010 $
b110010 (
#16
b1100 "
b1100 )
b11111100 !
b11111100 *
b1 %
b1 &
b1111101 $
b1111101 (
b1111111 #
b1111111 '
#21
b0 "
b0 )
b10 !
b10 *
b10 %
b10 &
#26
b1110 "
b1110 )
b11110111 !
b11110111 *
b10001000 $
b10001000 (
#31
b0 "
b0 )
b100 !
b100 *
b11 %
b11 &
b10 $
b10 (
b1 #
b1 '
#36
b0 %
b0 &
#41
b1011101 !
b1011101 *
b110 %
b110 &
b1010101 $
b1010101 (
b1101 #
b1101 '
#46
b101 !
b101 *
b111 %
b111 &
#51
